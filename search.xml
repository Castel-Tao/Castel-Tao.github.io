<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>随笔</title>
      <link href="/2020/06/11/sui-bi/"/>
      <url>/2020/06/11/sui-bi/</url>
      
        <content type="html"><![CDATA[<h2 id="就随便谢谢"><a href="#就随便谢谢" class="headerlink" title="就随便谢谢"></a>就随便谢谢</h2>]]></content>
      
      
      
        <tags>
            
            <tag> ggplot </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tabplot函数</title>
      <link href="/2020/06/11/tabplot-han-shu/"/>
      <url>/2020/06/11/tabplot-han-shu/</url>
      
        <content type="html"><![CDATA[<p>首先用devtools安装</p><p>然后运行：</p><pre class=" language-R"><code class="language-R">library(tabplot)diamonds %>% head()tableplot(diamonds)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ggplot </tag>
            
            <tag> R </tag>
            
            <tag> data visualization </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apply族函数</title>
      <link href="/2020/06/11/apply-zu-han-shu/"/>
      <url>/2020/06/11/apply-zu-han-shu/</url>
      
        <content type="html"><![CDATA[<p>其实也没必要记住这么多，不会用了查就行**</p><p>lapply<br>|<br>|-&gt; 简化版: sapply<br>| | -&gt; 可设置返回值模板: vapply<br>| |-&gt; 多变量版: mapply<br>|<br>|-&gt; 递归版: rapply</p><h2 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h2><ol><li>3个参数，(data，margin，FUN)</li><li>应用在matrix或array上</li></ol><h2 id="sweep"><a href="#sweep" class="headerlink" title="sweep"></a>sweep</h2><p>常常和apply一起用，sweep函数和apply函数相似，但是sweep主要用于array的计算，而apply更多的是矩阵和data.frame计算。</p><pre class=" language-R"><code class="language-R">> mean.att <- apply(attitude, 2, mean) #对attitude每一col取均值> sweep(attitude, 2, mean.att, FUN = "-") %>% head() #让attitude每一个值减去这列均值，这就是两个参数了，一个值，一个列均值      rating complaints privileges   learning     raises   critical   advance1 -21.633333      -15.6 -23.133333 -17.366667  -3.633333  17.233333  2.0666672  -1.633333       -2.6  -2.133333  -2.366667  -1.633333  -1.766667  4.0666673   6.366667        3.4  14.866667  12.633333  11.366667  11.233333  5.0666674  -3.633333       -3.6  -8.133333  -9.366667 -10.633333   9.233333 -7.9333335  16.366667       11.4   2.866667   9.633333   6.366667   8.233333  4.0666676 -21.633333      -11.6  -4.133333 -12.366667 -10.633333 -25.766667 -8.933333</code></pre><h2 id="tapply和aggregate"><a href="#tapply和aggregate" class="headerlink" title="tapply和aggregate"></a>tapply和aggregate</h2><p>tapply函数很有用，tapply的功能就是把数据按照某种分组，在每个组内进行某个运算。这个aggregate函数很像。我觉得还是aggregate好用。</p><pre class=" language-R"><code class="language-R">> aggregate(mtcars,by=list(mtcars$cyl,mtcars$gear),FUN=mean)...略> aggregate(mtcars,by=list(mtcars$gear),FUN=mean)  Group.1      mpg      cyl     disp       hp     drat       wt   qsec        vs        am1       3 16.10667 7.466667 326.3000 176.1333 3.132667 3.892600 17.692 0.2000000 0.00000002       4 24.53333 4.666667 123.0167  89.5000 4.043333 2.616667 18.965 0.8333333 0.66666673       5 21.38000 6.000000 202.4800 195.6000 3.916000 2.632600 15.640 0.2000000 1.0000000  gear     carb1    3 2.6666672    4 2.3333333    5 4.400000> aggregate(mtcars$qsec,by=list(mtcars$gear),FUN=mean)  Group.1      x1       3 17.6922       4 18.9653       5 15.640> aggregate(cbind(mpg,hp) ~ cyl+gear, FUN=mean)  cyl gear    mpg       hp1   4    3 21.500  97.00002   6    3 19.750 107.50003   8    3 15.050 194.16674   4    4 26.925  76.00005   6    4 19.750 116.50006   4    5 28.200 102.00007   6    5 19.700 175.00008   8    5 15.400 299.5000> tapply(mtcars$qsec,mtcars$gear, mean)     3      4      5 17.692 18.965 15.640 </code></pre><p><strong>还可以实现crosstable功能，这个很好用</strong></p><pre class=" language-R"><code class="language-R">> df <- data.frame(year=kronecker(2001:2003, rep(1,4)),                   loc=c('beijing','beijing','shanghai','shanghai'),                   type=rep(c('A','B'),6), sale=rep(1:12))> tapply(df$sale, df[,c('year','loc')], sum)      locyear   beijing shanghai  2001       3        7  2002      11       15  2003      19       23# 类似的aggregate就麻烦一些> aggregate(df$sale, by = list(df$year,df$loc),FUN= sum) %>% +     reshape2::dcast(Group.1~Group.2)  Group.1 beijing shanghai1    2001       3        72    2002      11       153    2003      19       23</code></pre><h2 id="sapply和lapply"><a href="#sapply和lapply" class="headerlink" title="sapply和lapply"></a>sapply和lapply</h2><ol><li>都只有两个参数，第一个参数是输入数据，第二个是函数。</li><li>都应用在一个vector或list上</li><li>sapply返回的是一个vector，但是lapply返回的是一个list。其实sapply可以理解成lapply的简化版，s就是simplify的意思。</li></ol><p>其它：为了让sapply返回array或matrix，simplify参数很好用。</p><pre class=" language-R"><code class="language-R">   sapply(1:5,function(x) matrix(x,2,2), simplify = "array")</code></pre><p>这两个sapply/lapply 常和unlist()，matrix()，as.dataframe()，函数一起使用</p><h2 id="mapply"><a href="#mapply" class="headerlink" title="mapply"></a>mapply</h2><ol><li>多变量版的sapply，很好用，m就是multi的意思。</li><li>返回值是vector或matrix</li></ol><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200525153812.png" alt=""></p><p><strong>下面这段代码值得一看</strong></p><pre class=" language-R"><code class="language-R">Alco <- data.frame(AlcoholDrunk = c( "YES", "YES", "NO",  "YES", "YES", "YES", NA, "YES", "YES", "YES", "YES", "YES", "YES", "NO",  "NO",  "NO",  "NO", "YES"),                    AmountDrunk = c(3.0, 1.0,  NA ,3.0,  NA, 0.0,  NA, 0.0,  NA, 1.7,  NA,  NA, 0.0,  NA,  NA,  NA,  NA, 2.0))#这里AlcoholDrunk变量有三种类型的值，“YES”，表示有饮酒史；“NO”, 表示无饮酒史；NA, 表示数据不可获取。# alcohol函数实现的功能是：如果AlcoholDrunk是NA，直接返回NA，如果是NO，返回NO；否则返回AmountDrunk的数值。alcohol <- function(texVal, numVal){  if(is.na(texVal)) {return("NA")}  else if(texVal == "NO"){return("NO")}  else if(is.na(numVal)){return("amount Unknown")}  else {return(numVal)}}mapply(alcohol, Alco$AlcoholDrunk, Alco$AmountDrunk)  #两个变量</code></pre><h2 id="replicate"><a href="#replicate" class="headerlink" title="replicate"></a>replicate</h2><p>另外还有一个非常有用的函数<strong>replicate()</strong>，它可以将某个函数重复运行N次，常常用来生成较复杂的随机数。下面的例子即先建立一个函数，模拟扔两个骰子的点数之和，然后重复运行1000次。</p><pre class=" language-R"><code class="language-R"># 定义一个game函数game <- function() {n <- sample(1:6,2,replace=T) #这个sample()函数也挺有意思的，我想replicate()应该经常会和sample()连用return(sum(n))}replicate(n=1000,game())  #将game()函数重复运行1000次。</code></pre><h2 id="rapply"><a href="#rapply" class="headerlink" title="rapply"></a>rapply</h2><p>这个好像也非常有用</p><pre class=" language-R"><code class="language-R">rapply(list, FUN, classes="ANY", deflt=NULL, how=c("unlist", "replace", "list"), ...)</code></pre><p>rapply是递归版的lappy。基本原理是对list作遍历，如果其中有的元素仍然是list，则继续遍历；对于每个非list类型的元素，如果其类型是classes参数指定的类型之一，则调用FUN。classes=”ANY”表示匹配所有类型。</p><p>how参数用来指定操作方式，有三种：</p><p>a. “replace” 直接用调用FUN后的结果替换原list中原来的元素<br>b. “list” 新建一个list，元素类型在classes中的，调用FUN；不在classes中的类型，使用deflt。会保留原始list的结构。<br>c. “unlist” 相当于对”list”模式下的结果调用unlist(recursive=TRUE)</p><p><strong>看完下面的例子你就明白了</strong></p><pre class=" language-R"><code class="language-R">> lst <- list(a=list(aa=c(1:5), ab=c(0.1,0.2,0.25,0.3,0.33)),  #a list里两个元素+             b=list(ba=c(1:10)),   #b list里一个元素+             c=c('ha','m','k'))  #c 不是一个list； a,b,c共同构成了lst list> lst$a$a$aa[1] 1 2 3 4 5$a$ab[1] 0.10 0.20 0.25 0.30 0.33$b$b$ba [1]  1  2  3  4  5  6  7  8  9 10$c[1] "ha" "m"  "k" > rapply(lst, sum, how='list',classes = 'numeric')$a$a$aaNULL$a$ab[1] 1.18$b$b$baNULL$cNULL> rapply(lst, sum, how='unlist',classes = c('integer'))a.aa b.ba   15   55 > rapply(lst, sum, how='unlist',classes = c('integer','numeric')) a.aa  a.ab  b.ba 15.00  1.18 55.00 > rapply(lst, sum, how='unlist',classes = c('integer','numeric'),deflt="This is deflt")           a.aa            a.ab            b.ba               c            "15"          "1.18"            "55" "This is deflt" > rapply(lst, nchar, how='unlist',classes = "character", deflt="DEFLT")   a.aa    a.ab    b.ba      c1      c2      c3 "DEFLT" "DEFLT" "DEFLT"     "2"     "1"     "1" </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> data cleaning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用Figures</title>
      <link href="/2020/06/10/chang-yong-figures/"/>
      <url>/2020/06/10/chang-yong-figures/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1441226072&auto=1&height=66"></iframe><h2 id="How-to-output"><a href="#How-to-output" class="headerlink" title="How to output ?"></a>How to output ?</h2><pre class=" language-R"><code class="language-R"># 第一种png("./Figures/cor.all.png",width = 1350,height = 1350,units = "px")pndev.off()# 第二种ggsave("c:/Users/TAOTAO/Desktop/Taimu.mountain/Diff_Finger_radar.png",width = 380,height = 380,units = 'mm')# 第三种library(export)graph2pdf(x=x, file=filen, aspectr=2, font = "Arial",             height = 5, bg = "transparent")graph2ppt(x=x, file=filen, vector.graphic=FALSE, width=9,           aspectr=sqrt(2), append = TRUE)graph2png(file=filen, fun=plot.fun, dpi=400, height = 5, aspectr=4)</code></pre><h2 id="Barplot"><a href="#Barplot" class="headerlink" title="Barplot"></a>Barplot</h2><pre class=" language-R"><code class="language-R">ggplot(cor.box,aes(x=project,y=value,fill=variable))+          geom_bar(stat = "identity",position = position_dodge(),width=0.7) +          geom_errorbar(aes(ymin=value-sd,ymax=value+sd),                        width=0.3, position=position_dodge(0.7))+ #bar֮??????          theme_bw() + scale_fill_npg() +           #scale_y_continuous(breaks = c(0,0.2,0.4,0.6,0.8,0.9,0.95,1.0),                   #  labels = c(0,0.2,0.4,0.6,0.8,0.9,0.95,1.0))+          geom_text(aes(label = round(cor.box$value,3)),vjust = 3,size=5,                    position = position_dodge(0.9))+          theme(axis.text = element_text(size =15),                axis.title = element_text(family ="Myriad",size=18),                legend.title = element_text(family ="Myriad",size=18,hjust = 0.5),                legend.text = element_text(size=15)                ) +          labs(x = "Projects", y = "Median Correlation of Log2 Intensity \n MCLI",                fill = "Sample")</code></pre><h2 id="Radar-plot"><a href="#Radar-plot" class="headerlink" title="Radar plot"></a>Radar plot</h2><pre class=" language-R"><code class="language-R">#Radar functioncoord_radar <- function (theta = "x", start = 0, direction = 1) {  theta <- match.arg(theta, c("x", "y"))r <- if (theta == "x")   "y"else "x"ggproto("CoordRadar", CoordPolar, theta = theta, r = r, start = start,         direction = sign(direction),        is_linear = function(coord) TRUE)}#names(hehe) <- c("organ","tea","tem_scaled")hehe %>%     ggplot(aes(x=organ, y=tem_scaled,group=tea, fill=tea,color=tea))+    geom_polygon(color="black",alpha=.1,size=0.5) +    geom_point(size=4,shape=21,alpha=.5)+    coord_radar() +    theme_bw() +    #facet_wrap(~variable,nrow=2) +    scale_fill_manual(values = c("#3d3b4f",'#4c8dae','#2edfa3','#dc3023','#b0a4e3','#f2be45','#3eede7')) +    scale_color_manual(values = c("#3d3b4f",'#4c8dae','#2edfa3','#dc3023','#b0a4e3','#f2be45','#3eede7')) +    theme(        axis.title=element_text(size=30,face="plain",color="black"),        axis.text = element_text(size=24,face="plain",color="black",angle = myAngle),        panel.grid.major = element_line(color="grey80"),        axis.line = element_line(color="black"),        axis.ticks =  element_line(color="black"),        legend.text = element_text(size=24))</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524140546.png" alt=""></p><h2 id="Boxplot"><a href="#Boxplot" class="headerlink" title="Boxplot"></a>Boxplot</h2><h3 id="箱线图"><a href="#箱线图" class="headerlink" title="箱线图"></a>箱线图</h3><pre class=" language-R"><code class="language-R">gg_data %>% ggplot(aes(x= diff, y= temperature, color= tea))+    geom_boxplot(size = 1.2) +     theme_bw() +  my.theme +    scale_color_manual(values = c("#3d3b4f",'#4c8dae','#2edfa3','#dc3023','#b0a4e3','#f2be45','#3eede7')) +    labs(title = "Temperature Difference of Finger Front ")</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524141112.png" alt=""></p><h3 id="云雨图"><a href="#云雨图" class="headerlink" title="云雨图"></a>云雨图</h3><pre class=" language-R"><code class="language-R">library(ggplot2)library(dplyr)"%||%" <- function(a, b) {  if (!is.null(a)) a else b}geom_flat_violin <- function(mapping = NULL, data = NULL, stat = "ydensity",                        position = "dodge", trim = TRUE, scale = "area",                        show.legend = NA, inherit.aes = TRUE, ...) {  layer(    data = data,    mapping = mapping,    stat = stat,    geom = GeomFlatViolin,    position = position,    show.legend = show.legend,    inherit.aes = inherit.aes,    params = list(      trim = trim,      scale = scale,      ...    )  )}#' @rdname ggplot2-ggproto#' @format NULL#' @usage NULL#' @exportGeomFlatViolin <-  ggproto("GeomFlatViolin", Geom,          setup_data = function(data, params) {            data$width <- data$width %||%              params$width %||% (resolution(data$x, FALSE) * 0.9)            # ymin, ymax, xmin, and xmax define the bounding rectangle for each group            data %>%              group_by(group) %>%              mutate(ymin = min(y),                     ymax = max(y),                     xmin = x,                     xmax = x + width / 2)          },          draw_group = function(data, panel_scales, coord) {            # Find the points for the line to go all the way around            data <- transform(data, xminv = x,                              xmaxv = x + violinwidth * (xmax - x))            # Make sure it's sorted properly to draw the outline            newdata <- rbind(plyr::arrange(transform(data, x = xminv), y),                             plyr::arrange(transform(data, x = xmaxv), -y))            # Close the polygon: set first and last point the same            # Needed for coord_polar and such            newdata <- rbind(newdata, newdata[1,])            ggplot2:::ggname("geom_flat_violin", GeomPolygon$draw_panel(newdata, panel_scales, coord))          },          draw_key = draw_key_polygon,          default_aes = aes(weight = 1, colour = "grey20", fill = "white", size = 0.5,                            alpha = NA, linetype = "solid"),          required_aes = c("x", "y"))#gg_data %>% dplyr::filter(diff == "F5-F4") %>% ggplot(aes(x= tea, y= temperature, fill=tea,color=tea))+    geom_flat_violin(position= position_nudge(x=.25)) +     geom_jitter(width = .1 )+    geom_boxplot(width = .1, position= position_nudge(x=.25), fill="white",size=.5,color="black") +     theme_bw() +  my.theme +    scale_color_manual(values = c("#3d3b4f",'#4c8dae','#2edfa3','#dc3023','#b0a4e3','#f2be45','#3eede7')) +    scale_fill_manual(values = c("#3d3b4f",'#4c8dae','#2edfa3','#dc3023','#b0a4e3','#f2be45','#3eede7')) +    labs(title = "Temperature Difference of Finger F5-F4 ")</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524140914.png" alt=""></p><h2 id="Lineplot"><a href="#Lineplot" class="headerlink" title="Lineplot"></a>Lineplot</h2><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144155.png" alt="">****</p><pre class=" language-R"><code class="language-R">gg_data_1 <- read_csv("c:/Users/TAOTAO/Desktop/R.Code/Always/LinePlot.csv")gg_data_1 %>%             ggplot(aes(y=tem_scaled,x=part, color=tea, shape=tea))+                geom_point(size = 4,alpha=.8) +                 theme_bw() +                 scale_color_manual(values = c("#3d3b4f",'#4c8dae','#2edfa3','#dc3023','#b0a4e3','#f2be45','#3eede7')) +        geom_line(data=gg_data_1[which(gg_data_1$group_1=="R"),],                 aes(group=factor(JingLuo), linetype= factor(Jingluo)), size=1.4,alpha = .6) +      geom_line(data=gg_data_1[which(gg_data_1$group_1=="L"),],                 aes(group=factor(JingLuo), linetype= factor(Jingluo)), size=1.4,alpha = .6) </code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524141154.png" alt=""></p><pre class=" language-R"><code class="language-R">hehe %>%  ggplot(aes(x=number,y=value,color=variable)) +   geom_line(lwd=2) +  #,linetype = "dashed"  theme_bw() + scale_color_npg() +  scale_x_continuous(breaks = POG.df$number,labels = POG.df$gene.rank)+  scale_y_continuous(breaks = c(0.2,0.4,0.6,0.7,0.8,0.85,0.9,0.95),                     labels = c(0.2,0.4,0.6,0.7,0.8,0.85,0.9,0.95))+  theme(axis.text.x = element_text(angle = 30,vjust = 0.4))+  xlab("Gene ranking")+  ylab("Percentage of Overlapped Genes")  #geom_point(position = position_dodge(.2), size = 2)</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524141236.png" alt=""></p><pre class=" language-R"><code class="language-R">tmp %>% dplyr::filter(type=="A") %>% ggplot(aes(x = variable,y=value,fill=Percentile,color=Date)) +   geom_line(lwd=3) +   ylab("Mean Covrage")+  xlab("Normalized Position")+  theme_bw() + scale_color_nejm() +  theme(axis.title = element_text(size=25),        axis.text = element_text(size =25),        legend.text = element_text(size=20), #图例文字        legend.title = element_text(size=25,hjust = 0.5))</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524141303.png" alt=""></p><h2 id="Scatter-plot"><a href="#Scatter-plot" class="headerlink" title="Scatter plot"></a>Scatter plot</h2><p>相关性矩阵图</p><pre class=" language-R"><code class="language-R">HEHE2 %>% pheatmap(show_rownames = T,           show_colnames = T,          cluster_rows = F,          cluster_cols = F,           display_numbers = TRUE,  #是否显示格子数值           number_color = "grey29",  #格子数值颜色           cutree_rows = 1,           cutree_cols = 1,           cellwidth = 45, cellheight = 45,           #annotation_col = col_anno,           #annotation_colors = ann_colors,          #annotation_row = col_anno,           border_color = F,   #调整格子边缘           main = paste0("Correlation Matrix of all Sample"),      #标题           fontsize=15                   #标题size           )</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144202.png" alt=""></p><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144533.png" alt=""></p><h2 id="Paired-Scatter-Plot"><a href="#Paired-Scatter-Plot" class="headerlink" title="Paired Scatter Plot"></a>Paired Scatter Plot</h2><pre class=" language-R"><code class="language-R">library(GGally)panel.points <- function(data, mapping){  ggplot(data = data, mapping = mapping) +    geom_point(alpha=0.4,size=1.3,color='#177cb0')+ #3C5488FF    geom_abline(intercept = 0 , slope = 1 , color='#c93756', linetype='dashed', size=1)    #scale_x_continuous(limits=c(-7,17))+    #scale_y_continuous(limits=c(-7,17))}pn <- ggpairs(tmp2[7:ncol(tmp2)],mapping = ggplot2::aes(),  #title = paste0("Paired Scatter plot; ",i,"; ",format," 3000 genes"),  lower = list(continuous = panel.points),  #diag = list(continuous='barDiag'),  upper = list(    continuous = function(data, mapping, ...){    ggally_cor(data = data, mapping = mapping, size= 10)}    ) ) +  theme_light() +  theme(legend.position = "none",         panel.grid.major = element_blank(),         axis.ticks = element_blank(),         strip.text = element_text(size =20), #调节小面标签大小        axis.text = element_text(size =15), #调节坐标轴字体大小        panel.border = element_rect(colour = "black", fill = NA))</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144046.png" alt=""></p><h2 id="Density-plot"><a href="#Density-plot" class="headerlink" title="Density plot"></a>Density plot</h2><pre class=" language-R"><code class="language-R">tmptmp %>%     ggplot(aes(x=value,fill=Sample_library,color=Sample_library)) +       geom_density(alpha=0.3,size=1.2) +       theme_bw() + scale_fill_nejm() + scale_color_nejm()+        labs(title = "Globle gene expression level",x= "log2 TPM")</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144111.png" alt=""></p><h2 id="VeenDiagram"><a href="#VeenDiagram" class="headerlink" title="VeenDiagram"></a>VeenDiagram</h2><pre class=" language-R"><code class="language-R">library (VennDiagram)venn.diagram(x=list(AGR=top2000.AGR, NVS=top2000.NVS,WuXi=top2000.WuX_Poly,ARD=top2000.ARD_Poly),                "NT_Consensus_Diff_Platform.png", height = 2000, width = 2000,                resolution =900, imagetype="png",col="gray",               fill=c("#574266","#bddd22","#ff2d51","#3eede7"),                alpha=c(0.6, 0.6,0.6,0.6), lwd=0.5, cex=0.4, #lwd调节线条宽度,cex=0了文字就没有了，                                                                      #cex调节里面的标注大小               cat.dist=c(-0.07, -0.07, -0.05,-0.07),                cat.pos=c(100, 260, 0,150),cat.cex=0.45, cat.col="black", #cat.调节数据集名称，                                                                     #cat.col和.pos似乎也可有可无               rotation.degree=180)    #rotation.degree是旋转角度的意思，可有可无</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144105.png" alt=""></p><h2 id="PCA"><a href="#PCA" class="headerlink" title="PCA"></a>PCA</h2><pre class=" language-R"><code class="language-R"># PCA ---------------------------------------------------------------------tmp %>% tail()tmp2 <- tmp %>% dcast(gene~Single_ID) tmp2 %>% dim()#然后PCA作图展示结果pc.cr <- prcomp(t(log2(tmp2[,-1] + 0.01)),retx = TRUE)pc <- round(summary(pc.cr)$importance[2,],2) pca.result <- as.data.frame(pc.cr$x[,1:2])tmp1 <- tmp %>% dplyr::select(Single_ID,sample,library,year,project)hehe <- tmp1 %>% group_by(Single_ID,library,sample,project) %>% summarise() %>% as.data.frame()pca.result <- cbind(hehe,pca.result)pca.result %>% head()##PCA按照样本类型，建库策略分开pn <- ggplot(pca.result,aes(x=PC1,y=PC2,color=sample,shape=library))+      geom_point(size = 6,alpha=0.5) +       theme_bw() + scale_color_nejm() +      xlab(paste0("PC1  ",pc[1])) +      ylab(paste0("PC2  ",pc[2])) ### 3D pcalibrary(rgl)pca.result.3d <- as.data.frame(pc.cr$x[,1:3])pca.result.3d <- cbind(hehe,pca.result.3d)pca.result.3d %>% headscales::show_col(pal_nejm("default")(8))pca.result.3d$color <- "#BC3C29FF"pca.result.3d$color[pca.result.3d$sample == "B"] <- "#0072B5FF"pca.result.3d$color[pca.result.3d$library == "PolyA"] <- "#E18727FF"pca.result.3d$color[pca.result.3d$library == "Ribo"] <- "#20854EFF"within(pca.result.3d,plot3d(PC1,PC2,PC3,size=10,col = color))</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144134.png" alt=""></p><h2 id="HCA"><a href="#HCA" class="headerlink" title="HCA"></a>HCA</h2><pre class=" language-R"><code class="language-R">sample[sample == "A"] <- "#BC3C29FF"  #红sample[sample == "B"] <- "#0072B5FF"library[library == "Ribo"] <- "#E18727FF"   #黄library[library == "PolyA"] <- "#20854EFF"  #绿color <-  data.frame(library,sample) %>% as.matrix()myclust <- function(x){hclust(x,method="average")}library("gplots")library("heatmap.plus")showpanel <- function(col){  image(z=matrix(1:100, ncol=1), col=col, xaxt="n", yaxt="n" )}showpanel(colorpanel(25,"#BC3C29FF","white","#0072B5FF"))heatmap.plus(as.matrix(center), col=colorpanel(15,"#0072B5FF","white","#BC3C29FF"),             labRow=F,labCol = F,             scale="none", hclustfun=myclust, ColSideColors=color,          key=F, symkey=FALSE, dendrogram=c("none"),          density.info="none", trace="none", cexRow=0.5)library(export)graph2png(file="hehe.png",width=7,height=7)require(graphics)hc <- hclust(dist(t(as.matrix(center))),"average")plot(hc,axes = F)</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144116.png" alt=""></p><h2 id="火山图"><a href="#火山图" class="headerlink" title="火山图"></a>火山图</h2><pre class=" language-R"><code class="language-R"># 设置pvalue和logFC的阈值cut_off_pvalue = 0.05cut_off_logFC = 1# 根据阈值分别为上调基因设置‘up’，下调基因设置‘Down’，无差异设置‘Stable’，保存到change列data$change = ifelse(data$qvalue < cut_off_pvalue & abs(data$log2.fc.) >= cut_off_logFC,                      ifelse(data$log2.fc.> cut_off_logFC ,'Up','Down'),'Stable')# 作图data %>% ggplot(aes(x= log2.fc. ,y=-log10(qvalue),color = change)) +  geom_point(aes(size = Abundance),alpha = 0.5 ) +   labs(x = "log2 fold change", y = "-log10(qvalue) \n") +    xlim(-4,4) + ylim(0,8) +           geom_hline(yintercept = -log10(0.05),lty=4,lwd=0.6,alpha=0.8) +    geom_vline(xintercept = c(1,-1),lty=4,lwd=0.6,alpha=0.8) +  theme_classic() +   scale_color_manual(values=c("#546de5", "#d2dae2","#ff4757"))</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200524144832.png" alt=""></p><h2 id="火山图2"><a href="#火山图2" class="headerlink" title="火山图2"></a>火山图2</h2><pre class=" language-R"><code class="language-R">data <- read.csv( "C:../asset/wuli.csv")data$Abundance <- (data$Y179.30 + data$Y179.40)/1000# 设置pvalue和logFC的阈值cut_off_pvalue = 0.05cut_off_logFC = 1# 根据阈值分别为上调基因设置‘up’，下调基因设置‘Down’，无差异设置‘Stable’，保存到change列data$change = ifelse(data$qvalue < cut_off_pvalue & abs(data$log2.fc.) >= cut_off_logFC,                      ifelse(data$log2.fc.> cut_off_logFC ,'Up','Down'),'Stable')# 作图pn <- data %>% ggplot(aes(x= log2.fc. ,y=-log10(qvalue),color = change)) +  geom_point(aes(size = Abundance),alpha = 0.5 ) +   labs(x = "log2 fold change", y = "-log10(qvalue) \n") +    xlim(-4,4) + ylim(0,8) +           geom_hline(yintercept = -log10(0.05),lty=4,lwd=0.6,alpha=0.8) +    geom_vline(xintercept = c(1,-1),lty=4,lwd=0.6,alpha=0.8) +  theme_classic() +   scale_color_manual(values=c("#546de5", "#d2dae2","#ff4757"))# 标记labeldata$label = ifelse(data$qvalue < cut_off_pvalue & abs(data$log2.fc.) >= 2.5,                        as.character(data$Geneid),"")library(ggrepel)pn + geom_text_repel(data = data, aes(x = data$log2.fc.,                                       y = -log10(data$qvalue),                                       label = label),                  size = 3,box.padding = unit(0.5, "lines"),                  point.padding = unit(0.8, "lines"),                   segment.color = "black",                   show.legend = FALSE)</code></pre><p><img src="https://raw.githubusercontent.com/Castel-Tao/Picbed_PicGo/master/img/20200531165613.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> ggplot </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/10/hello-world/"/>
      <url>/2020/06/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
